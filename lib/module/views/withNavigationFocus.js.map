{"version":3,"sources":["withNavigationFocus.js"],"names":["React","hoistStatics","withNavigation","withNavigationFocus","Component","ComponentWithNavigationFocus","isFocused","props","navigation","componentDidMount","subscriptions","addListener","setState","componentWillUnmount","forEach","sub","remove","render","state","onRef","displayName","name","forwardRef"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,SAASC,mBAAT,CAA6BC,SAA7B,EAAwC;AACrD,QAAMC,4BAAN,SAA2CL,KAAK,CAACI,SAAjD,CAA2D;AAAA;AAAA;;AAAA,qCAKjD;AACNE,QAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,UAAX,CAAsBF,SAAtB;AADL,OALiD;AAAA;;AASzDG,IAAAA,iBAAiB,GAAG;AAClB,YAAM;AAAED,QAAAA;AAAF,UAAiB,KAAKD,KAA5B;AAEA,WAAKG,aAAL,GAAqB,CACnBF,UAAU,CAACG,WAAX,CAAuB,WAAvB,EAAoC,MAClC,KAAKC,QAAL,CAAc;AAAEN,QAAAA,SAAS,EAAE;AAAb,OAAd,CADF,CADmB,EAInBE,UAAU,CAACG,WAAX,CAAuB,UAAvB,EAAmC,MACjC,KAAKC,QAAL,CAAc;AAAEN,QAAAA,SAAS,EAAE;AAAb,OAAd,CADF,CAJmB,CAArB;AAQD;;AAEDO,IAAAA,oBAAoB,GAAG;AAAA;;AACrB,kCAAKH,aAAL,4EAAoBI,OAApB,CAA6BC,GAAD,IAASA,GAAG,CAACC,MAAJ,EAArC;AACD;;AAEDC,IAAAA,MAAM,GAAG;AACP,0BACE,oBAAC,SAAD,eACM,KAAKV,KADX;AAEE,QAAA,SAAS,EAAE,KAAKW,KAAL,CAAWZ,SAFxB;AAGE,QAAA,GAAG,EAAE,KAAKC,KAAL,CAAWY;AAHlB,SADF;AAOD;;AAlCwD;;AADN,kBAC/Cd,4BAD+C,+CAGjDD,SAAS,CAACgB,WAAV,IAAyBhB,SAAS,CAACiB,IAHc;;AAsCrD,SAAOpB,YAAY,CACjBC,cAAc,CAACG,4BAAD,EAA+B;AAAEiB,IAAAA,UAAU,EAAE;AAAd,GAA/B,CADG,EAEjBlB,SAFiB,CAAnB;AAID","sourcesContent":["import * as React from 'react';\r\nimport hoistStatics from 'hoist-non-react-statics';\r\nimport withNavigation from './withNavigation';\r\n\r\nexport default function withNavigationFocus(Component) {\r\n  class ComponentWithNavigationFocus extends React.Component {\r\n    static displayName = `withNavigationFocus(${\r\n      Component.displayName || Component.name\r\n    })`;\r\n\r\n    state = {\r\n      isFocused: this.props.navigation.isFocused(),\r\n    };\r\n\r\n    componentDidMount() {\r\n      const { navigation } = this.props;\r\n\r\n      this.subscriptions = [\r\n        navigation.addListener('willFocus', () =>\r\n          this.setState({ isFocused: true })\r\n        ),\r\n        navigation.addListener('willBlur', () =>\r\n          this.setState({ isFocused: false })\r\n        ),\r\n      ];\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.subscriptions?.forEach((sub) => sub.remove());\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <Component\r\n          {...this.props}\r\n          isFocused={this.state.isFocused}\r\n          ref={this.props.onRef}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return hoistStatics(\r\n    withNavigation(ComponentWithNavigationFocus, { forwardRef: false }),\r\n    Component\r\n  );\r\n}\r\n"]}
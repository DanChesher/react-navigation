{"version":3,"sources":["Scrollables.js"],"names":["React","ScrollView","Platform","FlatList","SectionList","RefreshControl","GHScrollView","createNavigationAwareScrollable","invariant","WrappedScrollView","OS","propsMaybeWithRefreshControl","props","onRefresh","refreshing","JSON","stringify","refreshControl","progressViewOffset","WrappedFlatList","forwardRef","ref","WrappedSectionList"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,UADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,cALF,QAMO,cANP;AAOA,SAASJ,UAAU,IAAIK,YAAvB,QAA2C,8BAA3C;AACA,OAAOC,+BAAP,MAA4C,mCAA5C;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,IAAIC,iBAAJ;;AACA,IAAIP,QAAQ,CAACQ,EAAT,KAAgB,SAApB,EAA+B;AAC7B;AACA;AACA;AACAD,EAAAA,iBAAiB,GAAGF,+BAA+B,CAACN,UAAD,CAAnD;AACD,CALD,MAKO;AACLQ,EAAAA,iBAAiB,GAAGF,+BAA+B,CAACD,YAAD,CAAnD;AACD;;AAED,SAASK,4BAAT,CAAsCC,KAAtC,EAA6C;AAC3C,QAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB;;AACA,MAAIA,SAAJ,EAAe;AACbL,IAAAA,SAAS,CACP,OAAOI,KAAK,CAACE,UAAb,KAA4B,SADrB,EAEP,sFACEC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACE,UAArB,CADF,GAEE,GAJK,CAAT;AAMA,WAAO,EACL,GAAGF,KADE;AAELK,MAAAA,cAAc,EACZL,KAAK,CAACK,cAAN,IAAwB,IAAxB,gBACE,oBAAC,cAAD;AACE,QAAA,UAAU,EAAEL,KAAK,CAACE,UADpB;AAEE,QAAA,SAAS,EAAED,SAFb;AAGE,QAAA,kBAAkB,EAAED,KAAK,CAACM;AAH5B,QADF,GAOEN,KAAK,CAACK;AAVL,KAAP;AAaD,GApBD,MAoBO;AACL,WAAOL,KAAP;AACD;AACF;;AAED,MAAMO,eAAe,gBAAGnB,KAAK,CAACoB,UAAN,CAAiB,CAACR,KAAD,EAAQS,GAAR,kBACvC,oBAAC,QAAD;AACE,EAAA,GAAG,EAAEA;AADP,GAEMT,KAFN;AAGE,EAAA,qBAAqB,EAAGA,KAAD,iBACrB,oBAAC,iBAAD,EAAuBD,4BAA4B,CAACC,KAAD,CAAnD;AAJJ,GADsB,CAAxB;AAUA,MAAMU,kBAAkB,gBAAGtB,KAAK,CAACoB,UAAN,CAAiB,CAACR,KAAD,EAAQS,GAAR,kBAC1C,oBAAC,WAAD;AACE,EAAA,GAAG,EAAEA;AADP,GAEMT,KAFN;AAGE,EAAA,qBAAqB,EAAGA,KAAD,iBACrB,oBAAC,iBAAD,EAAuBD,4BAA4B,CAACC,KAAD,CAAnD;AAJJ,GADyB,CAA3B;AAUA,SACEH,iBAAiB,IAAIR,UADvB,EAEEkB,eAAe,IAAIhB,QAFrB,EAGEmB,kBAAkB,IAAIlB,WAHxB","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ScrollView,\r\n  Platform,\r\n  FlatList,\r\n  SectionList,\r\n  RefreshControl,\r\n} from 'react-native';\r\nimport { ScrollView as GHScrollView } from 'react-native-gesture-handler';\r\nimport createNavigationAwareScrollable from './createNavigationAwareScrollable';\r\nimport invariant from './utils/invariant';\r\n\r\nlet WrappedScrollView;\r\nif (Platform.OS === 'android') {\r\n  // @todo: use GHScrollView again when\r\n  // https://github.com/kmagiera/react-native-gesture-handler/issues/560 has\r\n  // been fixed.\r\n  WrappedScrollView = createNavigationAwareScrollable(ScrollView);\r\n} else {\r\n  WrappedScrollView = createNavigationAwareScrollable(GHScrollView);\r\n}\r\n\r\nfunction propsMaybeWithRefreshControl(props) {\r\n  const onRefresh = props.onRefresh;\r\n  if (onRefresh) {\r\n    invariant(\r\n      typeof props.refreshing === 'boolean',\r\n      '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\r\n        JSON.stringify(props.refreshing) +\r\n        '`'\r\n    );\r\n    return {\r\n      ...props,\r\n      refreshControl:\r\n        props.refreshControl == null ? (\r\n          <RefreshControl\r\n            refreshing={props.refreshing}\r\n            onRefresh={onRefresh}\r\n            progressViewOffset={props.progressViewOffset}\r\n          />\r\n        ) : (\r\n          props.refreshControl\r\n        ),\r\n    };\r\n  } else {\r\n    return props;\r\n  }\r\n}\r\n\r\nconst WrappedFlatList = React.forwardRef((props, ref) => (\r\n  <FlatList\r\n    ref={ref}\r\n    {...props}\r\n    renderScrollComponent={(props) => (\r\n      <WrappedScrollView {...propsMaybeWithRefreshControl(props)} />\r\n    )}\r\n  />\r\n));\r\n\r\nconst WrappedSectionList = React.forwardRef((props, ref) => (\r\n  <SectionList\r\n    ref={ref}\r\n    {...props}\r\n    renderScrollComponent={(props) => (\r\n      <WrappedScrollView {...propsMaybeWithRefreshControl(props)} />\r\n    )}\r\n  />\r\n));\r\n\r\nexport {\r\n  WrappedScrollView as ScrollView,\r\n  WrappedFlatList as FlatList,\r\n  WrappedSectionList as SectionList,\r\n};\r\n"]}
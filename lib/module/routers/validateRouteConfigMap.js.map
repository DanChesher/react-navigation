{"version":3,"sources":["validateRouteConfigMap.js"],"names":["isValidElementType","invariant","validateRouteConfigMap","routeConfigs","routeNames","Object","keys","length","forEach","routeName","routeConfig","screenComponent","getScreenComponent","getScreen","Error","screen"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,UAAnC;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA;;;;;AAIA,SAASC,sBAAT,CAAgCC,YAAhC,EAA8C;AAC5C,QAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYH,YAAZ,CAAnB;AACAF,EAAAA,SAAS,CACPG,UAAU,CAACG,MAAX,GAAoB,CADb,EAEP,iEAFO,CAAT;AAKAH,EAAAA,UAAU,CAACI,OAAX,CAAoBC,SAAD,IAAe;AAChC,UAAMC,WAAW,GAAGP,YAAY,CAACM,SAAD,CAAhC;AACA,UAAME,eAAe,GAAGC,kBAAkB,CAACF,WAAD,CAA1C;;AAEA,QACE,CAACC,eAAD,IACC,CAACX,kBAAkB,CAACW,eAAD,CAAnB,IAAwC,CAACD,WAAW,CAACG,SAFxD,EAGE;AACA,YAAM,IAAIC,KAAJ,oCAAsCL,SAAtC,mGAIVA,SAJU,+GAWVA,SAXU,uBAAN;AAaD;;AAED,QAAIC,WAAW,CAACK,MAAZ,IAAsBL,WAAW,CAACG,SAAtC,EAAiD;AAC/C,YAAM,IAAIC,KAAJ,kBACML,SADN,yDAAN;AAGD;AACF,GA5BD;AA6BD;;AAED,SAASG,kBAAT,CAA4BF,WAA5B,EAAyC;AACvC,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,IAAP;AACD;;AAED,SAAOA,WAAW,CAACK,MAAZ,GAAqBL,WAAW,CAACK,MAAjC,GAA0CL,WAAjD;AACD;;AAED,eAAeR,sBAAf","sourcesContent":["import { isValidElementType } from 'react-is';\r\n\r\nimport invariant from '../utils/invariant';\r\n\r\n/**\r\n * Make sure the config passed e.g. to StackRouter, TabRouter has\r\n * the correct format, and throw a clear error if it doesn't.\r\n */\r\nfunction validateRouteConfigMap(routeConfigs) {\r\n  const routeNames = Object.keys(routeConfigs);\r\n  invariant(\r\n    routeNames.length > 0,\r\n    'Please specify at least one route when configuring a navigator.'\r\n  );\r\n\r\n  routeNames.forEach((routeName) => {\r\n    const routeConfig = routeConfigs[routeName];\r\n    const screenComponent = getScreenComponent(routeConfig);\r\n\r\n    if (\r\n      !screenComponent ||\r\n      (!isValidElementType(screenComponent) && !routeConfig.getScreen)\r\n    ) {\r\n      throw new Error(`The component for route '${routeName}' must be a React component. For example:\r\n\r\nimport MyScreen from './MyScreen';\r\n...\r\n${routeName}: MyScreen,\r\n}\r\n\r\nYou can also use a navigator:\r\n\r\nimport MyNavigator from './MyNavigator';\r\n...\r\n${routeName}: MyNavigator,\r\n}`);\r\n    }\r\n\r\n    if (routeConfig.screen && routeConfig.getScreen) {\r\n      throw new Error(\r\n        `Route '${routeName}' should declare a screen or a getScreen, not both.`\r\n      );\r\n    }\r\n  });\r\n}\r\n\r\nfunction getScreenComponent(routeConfig) {\r\n  if (!routeConfig) {\r\n    return null;\r\n  }\r\n\r\n  return routeConfig.screen ? routeConfig.screen : routeConfig;\r\n}\r\n\r\nexport default validateRouteConfigMap;\r\n"]}
{"version":3,"sources":["createNavigator.js"],"names":["React","invariant","ThemeContext","NavigationFocusEvents","createNavigator","NavigatorView","router","navigationConfig","Navigator","Component","constructor","props","context","state","descriptors","screenProps","theme","themeContext","getDerivedStateFromProps","nextProps","currentState","prevDescriptors","navigation","routes","TypeError","reduce","route","key","getComponent","getComponentForRouteName","bind","routeName","childNavigation","getChildNavigation","options","getScreenOptions","componentDidUpdate","setState","render","target","type","data","emit","navigationOptions"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport invariant from '../utils/invariant';\r\nimport ThemeContext from '../views/ThemeContext';\r\nimport NavigationFocusEvents from '../views/NavigationFocusEvents';\r\n\r\nfunction createNavigator(NavigatorView, router, navigationConfig) {\r\n  class Navigator extends React.Component {\r\n    // eslint-disable-next-line react/sort-comp\r\n    static contextType = ThemeContext;\r\n    static router = router;\r\n    static navigationOptions = navigationConfig.navigationOptions;\r\n\r\n    constructor(props, context) {\r\n      super(props, context);\r\n\r\n      this.state = {\r\n        descriptors: {},\r\n        screenProps: this.props.screenProps,\r\n        theme: context,\r\n        themeContext: context,\r\n      };\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, currentState) {\r\n      const prevDescriptors = currentState.descriptors;\r\n      const { navigation, screenProps } = nextProps;\r\n      invariant(\r\n        navigation != null,\r\n        'The navigation prop is missing for this navigator. In react-navigation v3 and v4 you must set up your app container directly. More info: https://reactnavigation.org/docs/en/app-containers.html'\r\n      );\r\n      const { state } = navigation;\r\n      const { routes } = state;\r\n      if (typeof routes === 'undefined') {\r\n        throw new TypeError(\r\n          'No \"routes\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop'\r\n        );\r\n      }\r\n\r\n      const descriptors = routes.reduce((descriptors, route) => {\r\n        if (\r\n          prevDescriptors &&\r\n          prevDescriptors[route.key] &&\r\n          route === prevDescriptors[route.key].state &&\r\n          screenProps === currentState.screenProps &&\r\n          currentState.themeContext === currentState.theme\r\n        ) {\r\n          descriptors[route.key] = prevDescriptors[route.key];\r\n          return descriptors;\r\n        }\r\n        const getComponent = router.getComponentForRouteName.bind(\r\n          null,\r\n          route.routeName\r\n        );\r\n        const childNavigation = navigation.getChildNavigation(route.key);\r\n        const options = router.getScreenOptions(\r\n          childNavigation,\r\n          screenProps,\r\n          currentState.themeContext\r\n        );\r\n        descriptors[route.key] = {\r\n          key: route.key,\r\n          getComponent,\r\n          options,\r\n          state: route,\r\n          navigation: childNavigation,\r\n        };\r\n        return descriptors;\r\n      }, {});\r\n\r\n      return { descriptors, screenProps, theme: state.themeContext };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n      if (this.context !== this.state.themeContext) {\r\n        // eslint-disable-next-line react/no-did-update-set-state\r\n        this.setState({ themeContext: this.context });\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n          <NavigationFocusEvents\r\n            navigation={this.props.navigation}\r\n            onEvent={(target, type, data) => {\r\n              this.state.descriptors[target]?.navigation.emit(type, data);\r\n            }}\r\n          />\r\n          <NavigatorView\r\n            {...this.props}\r\n            screenProps={this.state.screenProps}\r\n            navigation={this.props.navigation}\r\n            navigationConfig={navigationConfig}\r\n            descriptors={this.state.descriptors}\r\n          />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  return Navigator;\r\n}\r\n\r\nexport default createNavigator;\r\n"]}
{"version":3,"sources":["getNavigation.js"],"names":["getNavigationActionCreators","getChildNavigation","getChildrenNavigationCache","getNavigation","router","state","dispatch","actionSubscribers","getScreenProps","getCurrentNavigation","actions","getActionCreators","navigation","childKey","isFocused","routes","index","key","addListener","eventName","handler","remove","add","delete","dangerouslyGetParent","isFirstRouteInParent","_childrenNavigation","actionCreators","Object","keys","forEach","actionName","args"],"mappings":"AAAA,OAAOA,2BAAP,MAAwC,uCAAxC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AAEA,eAAe,SAASC,aAAT,CACbC,MADa,EAEbC,KAFa,EAGbC,QAHa,EAIbC,iBAJa,EAKbC,cALa,EAMbC,oBANa,EAOb;AACA,QAAMC,OAAO,GAAGN,MAAM,CAACO,iBAAP,CAAyBN,KAAzB,EAAgC,IAAhC,CAAhB;AAEA,QAAMO,UAAU,GAAG;AACjBF,IAAAA,OADiB;AAEjBN,IAAAA,MAFiB;AAGjBC,IAAAA,KAHiB;AAIjBC,IAAAA,QAJiB;AAKjBE,IAAAA,cALiB;AAMjBP,IAAAA,kBAAkB,EAAGY,QAAD,IAClBZ,kBAAkB,CAACW,UAAD,EAAaC,QAAb,EAAuBJ,oBAAvB,CAPH;AAQjBK,IAAAA,SAAS,EAAGD,QAAD,IAAc;AACvB,YAAM;AAAEE,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAoBP,oBAAoB,GAAGJ,KAAjD;;AACA,UAAIQ,QAAQ,IAAI,IAAZ,IAAoBE,MAAM,CAACC,KAAD,CAAN,CAAcC,GAAd,KAAsBJ,QAA9C,EAAwD;AACtD,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD,KAdgB;AAejBK,IAAAA,WAAW,EAAE,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AACnC,UAAID,SAAS,KAAK,QAAlB,EAA4B;AAC1B,eAAO;AAAEE,UAAAA,MAAM,EAAE,MAAM,CAAE;AAAlB,SAAP;AACD;;AACDd,MAAAA,iBAAiB,CAACe,GAAlB,CAAsBF,OAAtB;AACA,aAAO;AACLC,QAAAA,MAAM,EAAE,MAAM;AACZd,UAAAA,iBAAiB,CAACgB,MAAlB,CAAyBH,OAAzB;AACD;AAHI,OAAP;AAKD,KAzBgB;AA0BjBI,IAAAA,oBAAoB,EAAE,MAAM,IA1BX;AA2BjBC,IAAAA,oBAAoB,EAAE,MAAM,IA3BX;AA4BjBC,IAAAA,mBAAmB,EAAExB,0BAA0B,CAACO,oBAAoB,EAArB;AA5B9B,GAAnB;AA+BA,QAAMkB,cAAc,GAAG,EACrB,GAAG3B,2BAA2B,CAACY,UAAU,CAACP,KAAZ,CADT;AAErB,OAAGK;AAFkB,GAAvB;AAKAkB,EAAAA,MAAM,CAACC,IAAP,CAAYF,cAAZ,EAA4BG,OAA5B,CAAqCC,UAAD,IAAgB;AAClDnB,IAAAA,UAAU,CAACmB,UAAD,CAAV,GAAyB,CAAC,GAAGC,IAAJ,KACvBpB,UAAU,CAACN,QAAX,CAAoBqB,cAAc,CAACI,UAAD,CAAd,CAA2B,GAAGC,IAA9B,CAApB,CADF;AAED,GAHD;AAKA,SAAOpB,UAAP;AACD","sourcesContent":["import getNavigationActionCreators from './routers/getNavigationActionCreators';\r\nimport getChildNavigation from './getChildNavigation';\r\nimport getChildrenNavigationCache from './getChildrenNavigationCache';\r\n\r\nexport default function getNavigation(\r\n  router,\r\n  state,\r\n  dispatch,\r\n  actionSubscribers,\r\n  getScreenProps,\r\n  getCurrentNavigation\r\n) {\r\n  const actions = router.getActionCreators(state, null);\r\n\r\n  const navigation = {\r\n    actions,\r\n    router,\r\n    state,\r\n    dispatch,\r\n    getScreenProps,\r\n    getChildNavigation: (childKey) =>\r\n      getChildNavigation(navigation, childKey, getCurrentNavigation),\r\n    isFocused: (childKey) => {\r\n      const { routes, index } = getCurrentNavigation().state;\r\n      if (childKey == null || routes[index].key === childKey) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    addListener: (eventName, handler) => {\r\n      if (eventName !== 'action') {\r\n        return { remove: () => {} };\r\n      }\r\n      actionSubscribers.add(handler);\r\n      return {\r\n        remove: () => {\r\n          actionSubscribers.delete(handler);\r\n        },\r\n      };\r\n    },\r\n    dangerouslyGetParent: () => null,\r\n    isFirstRouteInParent: () => true,\r\n    _childrenNavigation: getChildrenNavigationCache(getCurrentNavigation()),\r\n  };\r\n\r\n  const actionCreators = {\r\n    ...getNavigationActionCreators(navigation.state),\r\n    ...actions,\r\n  };\r\n\r\n  Object.keys(actionCreators).forEach((actionName) => {\r\n    navigation[actionName] = (...args) =>\r\n      navigation.dispatch(actionCreators[actionName](...args));\r\n  });\r\n\r\n  return navigation;\r\n}\r\n"]}
{"version":3,"sources":["ResourceSavingSceneView.js"],"names":["React","Platform","StyleSheet","View","SceneView","FAR_FAR_AWAY","ResourceSavingSceneView","PureComponent","getDerivedStateFromProps","nextProps","prevState","isFocused","awake","constructor","props","animationEnabled","swipeEnabled","state","lazy","render","childNavigation","removeClippedSubviews","rest","styles","container","OS","_mustAlwaysBeVisible","innerAttached","innerDetached","create","flex","overflow","top"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,IAA/B,QAA2C,cAA3C;AACA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,MAAMC,YAAY,GAAG,IAArB,C,CAA2B;;AAE3B,MAAMC,uBAAN,SAAsCN,KAAK,CAACO,aAA5C,CAA0D;AACxD,SAAOC,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AACpD,QAAID,SAAS,CAACE,SAAV,IAAuB,CAACD,SAAS,CAACE,KAAtC,EAA6C;AAC3C,aAAO;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,kDAQI,MAAM;AAC3B,aAAO,KAAKA,KAAL,CAAWC,gBAAX,IAA+B,KAAKD,KAAL,CAAWE,YAAjD;AACD,KAVkB;;AAGjB,SAAKC,KAAL,GAAa;AACXL,MAAAA,KAAK,EAAEE,KAAK,CAACI,IAAN,GAAaJ,KAAK,CAACH,SAAnB,GAA+B;AAD3B,KAAb;AAGD;;AAMDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAY,KAAKK,KAAvB;AACA,UAAM;AACJN,MAAAA,SADI;AAEJS,MAAAA,eAFI;AAGJC,MAAAA,qBAHI;AAIJ,SAAGC;AAJC,QAKF,KAAKR,KALT;AAOA,wBACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAES,MAAM,CAACC,SADhB;AAEE,MAAA,WAAW,EAAE,KAFf;AAGE,MAAA,qBAAqB,EACnBvB,QAAQ,CAACwB,EAAT,KAAgB,SAAhB,GACIJ,qBADJ,GAEI,CAACV,SAAD,IAAcU;AANtB,oBASE,oBAAC,IAAD;AACE,MAAA,KAAK,EACH,KAAKK,oBAAL,MAA+Bf,SAA/B,GACIY,MAAM,CAACI,aADX,GAEIJ,MAAM,CAACK;AAJf,OAOGhB,KAAK,gBAAG,oBAAC,SAAD,eAAeU,IAAf;AAAqB,MAAA,UAAU,EAAEF;AAAjC,OAAH,GAA0D,IAPlE,CATF,CADF;AAqBD;;AAnDuD;;AAsD1D,MAAMG,MAAM,GAAGrB,UAAU,CAAC2B,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADoB;AAK/BJ,EAAAA,aAAa,EAAE;AACbG,IAAAA,IAAI,EAAE;AADO,GALgB;AAQ/BF,EAAAA,aAAa,EAAE;AACbE,IAAAA,IAAI,EAAE,CADO;AAEbE,IAAAA,GAAG,EAAE3B;AAFQ;AARgB,CAAlB,CAAf;AAcA,eAAeC,uBAAf","sourcesContent":["import * as React from 'react';\r\nimport { Platform, StyleSheet, View } from 'react-native';\r\nimport { SceneView } from '@react-navigation/core';\r\n\r\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\r\n\r\nclass ResourceSavingSceneView extends React.PureComponent {\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.isFocused && !prevState.awake) {\r\n      return { awake: true };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      awake: props.lazy ? props.isFocused : true,\r\n    };\r\n  }\r\n\r\n  _mustAlwaysBeVisible = () => {\r\n    return this.props.animationEnabled || this.props.swipeEnabled;\r\n  };\r\n\r\n  render() {\r\n    const { awake } = this.state;\r\n    const {\r\n      isFocused,\r\n      childNavigation,\r\n      removeClippedSubviews,\r\n      ...rest\r\n    } = this.props;\r\n\r\n    return (\r\n      <View\r\n        style={styles.container}\r\n        collapsable={false}\r\n        removeClippedSubviews={\r\n          Platform.OS === 'android'\r\n            ? removeClippedSubviews\r\n            : !isFocused && removeClippedSubviews\r\n        }\r\n      >\r\n        <View\r\n          style={\r\n            this._mustAlwaysBeVisible() || isFocused\r\n              ? styles.innerAttached\r\n              : styles.innerDetached\r\n          }\r\n        >\r\n          {awake ? <SceneView {...rest} navigation={childNavigation} /> : null}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    overflow: 'hidden',\r\n  },\r\n  innerAttached: {\r\n    flex: 1,\r\n  },\r\n  innerDetached: {\r\n    flex: 1,\r\n    top: FAR_FAR_AWAY,\r\n  },\r\n});\r\n\r\nexport default ResourceSavingSceneView;\r\n"]}
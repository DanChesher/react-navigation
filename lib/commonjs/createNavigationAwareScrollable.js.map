{"version":3,"sources":["createNavigationAwareScrollable.js"],"names":["createNavigationAwareScrollable","Component","ComponentWithNavigationScrolling","React","PureComponent","componentDidMount","_subscription","props","navigation","addListener","scrollableNode","getNode","isFocused","scrollToTop","scrollTo","y","scrollResponderScrollTo","componentWillUnmount","remove","_scrollRef","getScrollResponder","render","view","displayName","name","NavigationAwareScrollable","_innerRef","onRef","args","setNativeProps","getScrollableNode","getInnerViewNode","scrollToEnd","scrollWithoutAnimationTo","flashScrollIndicators","_captureRef"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport hoistStatics from 'hoist-non-react-statics';\r\nimport { withNavigation } from '@react-navigation/core';\r\n\r\nexport default function createNavigationAwareScrollable(Component) {\r\n  const ComponentWithNavigationScrolling = withNavigation(\r\n    class extends React.PureComponent {\r\n      static displayName = `withNavigationScrolling(${\r\n        Component.displayName || Component.name\r\n      })`;\r\n\r\n      componentDidMount() {\r\n        this._subscription = this.props.navigation.addListener(\r\n          'refocus',\r\n          () => {\r\n            const scrollableNode = this.getNode();\r\n            if (this.props.navigation.isFocused() && scrollableNode !== null) {\r\n              if (scrollableNode.scrollToTop != null) {\r\n                scrollableNode.scrollToTop();\r\n              } else if (scrollableNode.scrollTo != null) {\r\n                scrollableNode.scrollTo({ y: 0 });\r\n              } else if (scrollableNode.scrollResponderScrollTo != null) {\r\n                scrollableNode.scrollResponderScrollTo({ y: 0 });\r\n              }\r\n            }\r\n          }\r\n        );\r\n      }\r\n\r\n      componentWillUnmount() {\r\n        if (this._subscription != null) {\r\n          this._subscription.remove();\r\n        }\r\n      }\r\n\r\n      getNode() {\r\n        if (this._scrollRef === null) {\r\n          return null;\r\n        }\r\n\r\n        if (this._scrollRef.getScrollResponder) {\r\n          return this._scrollRef.getScrollResponder();\r\n        } else if (this._scrollRef.getNode) {\r\n          return this._scrollRef.getNode();\r\n        } else {\r\n          return this._scrollRef;\r\n        }\r\n      }\r\n\r\n      render() {\r\n        return (\r\n          <Component\r\n            ref={(view) => {\r\n              this._scrollRef = view;\r\n            }}\r\n            {...this.props}\r\n          />\r\n        );\r\n      }\r\n    }\r\n  );\r\n\r\n  class NavigationAwareScrollable extends React.PureComponent {\r\n    static displayName = `NavigationAwareScrollable(${\r\n      Component.displayName || Component.name\r\n    })`;\r\n\r\n    _captureRef = (view) => {\r\n      this._innerRef = view;\r\n      this.props.onRef && this.props.onRef(view);\r\n    };\r\n\r\n    setNativeProps = (...args) => {\r\n      return this._innerRef.getNode().setNativeProps(...args);\r\n    };\r\n\r\n    getScrollResponder = (...args) => {\r\n      return this._innerRef.getNode().getScrollResponder(...args);\r\n    };\r\n\r\n    getScrollableNode = (...args) => {\r\n      return this._innerRef.getNode().getScrollableNode(...args);\r\n    };\r\n\r\n    getInnerViewNode = (...args) => {\r\n      return this._innerRef.getNode().getInnerViewNode(...args);\r\n    };\r\n\r\n    scrollTo = (...args) => {\r\n      return this._innerRef.getNode().scrollTo(...args);\r\n    };\r\n\r\n    scrollToEnd = (...args) => {\r\n      return this._innerRef.getNode().scrollToEnd(...args);\r\n    };\r\n\r\n    scrollWithoutAnimationTo = (...args) => {\r\n      return this._innerRef.getNode().scrollWithoutAnimationTo(...args);\r\n    };\r\n\r\n    flashScrollIndicators = (...args) => {\r\n      return this._innerRef.getNode().flashScrollIndicators(...args);\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <ComponentWithNavigationScrolling\r\n          {...this.props}\r\n          onRef={this._captureRef}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return hoistStatics(NavigationAwareScrollable, Component);\r\n}\r\n"]}
{"version":3,"sources":["getChildNavigation.js"],"names":["createParamGetter","route","paramName","defaultValue","params","getChildNavigation","navigation","childKey","getCurrentParentNavigation","children","childRoute","state","routes","find","r","key","childRouter","router","routeName","focusedGrandChildRoute","index","actionCreators","actions","getActionCreators","actionHelpers","Object","keys","forEach","actionName","args","actionCreator","action","dispatch","isFirstRouteInParent","parentNavigation","indexOf","getParam","addListener","emit","grandChildKey","nav","isFocused","currentNavigation","getScreenProps","dangerouslyGetParent"],"mappings":"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","sourcesContent":["import getChildRouter from './getChildRouter';\r\nimport getNavigationActionCreators from './routers/getNavigationActionCreators';\r\nimport getChildrenNavigationCache from './getChildrenNavigationCache';\r\nimport getEventManager from './getEventManager';\r\n\r\nconst createParamGetter = (route) => (paramName, defaultValue) => {\r\n  const params = route.params;\r\n\r\n  if (params && paramName in params) {\r\n    return params[paramName];\r\n  }\r\n\r\n  return defaultValue;\r\n};\r\n\r\nfunction getChildNavigation(navigation, childKey, getCurrentParentNavigation) {\r\n  const children = getChildrenNavigationCache(navigation);\r\n  const childRoute = navigation.state.routes.find((r) => r.key === childKey);\r\n\r\n  if (!childRoute) {\r\n    return null;\r\n  }\r\n\r\n  if (children[childKey] && children[childKey].state === childRoute) {\r\n    return children[childKey];\r\n  }\r\n\r\n  const childRouter = getChildRouter(navigation.router, childRoute.routeName);\r\n\r\n  // If the route has children, we'll use this to pass in to the action creators\r\n  // for the childRouter so that any action that depends on the active route will\r\n  // behave as expected. We don't explicitly require that routers implement routes\r\n  // and index properties, but if we did then we would put an invariant here to\r\n  // ensure that a focusedGrandChildRoute exists if childRouter is defined.\r\n  const focusedGrandChildRoute =\r\n    childRoute.routes && typeof childRoute.index === 'number'\r\n      ? childRoute.routes[childRoute.index]\r\n      : null;\r\n\r\n  const actionCreators = {\r\n    ...navigation.actions,\r\n    ...navigation.router.getActionCreators(childRoute, navigation.state.key),\r\n    ...(childRouter\r\n      ? childRouter.getActionCreators(focusedGrandChildRoute, childRoute.key)\r\n      : {}),\r\n    ...getNavigationActionCreators(childRoute),\r\n  };\r\n\r\n  const actionHelpers = {};\r\n  Object.keys(actionCreators).forEach((actionName) => {\r\n    actionHelpers[actionName] = (...args) => {\r\n      const actionCreator = actionCreators[actionName];\r\n      const action = actionCreator(...args);\r\n      return navigation.dispatch(action);\r\n    };\r\n  });\r\n\r\n  let isFirstRouteInParent = true;\r\n\r\n  const parentNavigation = getCurrentParentNavigation();\r\n\r\n  if (parentNavigation) {\r\n    isFirstRouteInParent =\r\n      parentNavigation.state.routes.indexOf(childRoute) === 0;\r\n  }\r\n\r\n  if (\r\n    children[childKey] &&\r\n    children[childKey].isFirstRouteInParent() === isFirstRouteInParent\r\n  ) {\r\n    children[childKey] = {\r\n      ...children[childKey],\r\n      ...actionHelpers,\r\n      state: childRoute,\r\n      router: childRouter,\r\n      actions: actionCreators,\r\n      getParam: createParamGetter(childRoute),\r\n    };\r\n    return children[childKey];\r\n  } else {\r\n    const { addListener, emit } = getEventManager(childKey);\r\n\r\n    children[childKey] = {\r\n      ...actionHelpers,\r\n\r\n      state: childRoute,\r\n      router: childRouter,\r\n      actions: actionCreators,\r\n      getParam: createParamGetter(childRoute),\r\n\r\n      getChildNavigation: (grandChildKey) =>\r\n        getChildNavigation(children[childKey], grandChildKey, () => {\r\n          const nav = getCurrentParentNavigation();\r\n          return nav && nav.getChildNavigation(childKey);\r\n        }),\r\n\r\n      isFocused: () => {\r\n        const currentNavigation = getCurrentParentNavigation();\r\n        if (!currentNavigation) {\r\n          return false;\r\n        }\r\n        const { routes, index } = currentNavigation.state;\r\n        if (!currentNavigation.isFocused()) {\r\n          return false;\r\n        }\r\n        if (routes[index].key === childKey) {\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n      isFirstRouteInParent: () => isFirstRouteInParent,\r\n      dispatch: navigation.dispatch,\r\n      getScreenProps: navigation.getScreenProps,\r\n      dangerouslyGetParent: getCurrentParentNavigation,\r\n      addListener,\r\n      emit,\r\n    };\r\n\r\n    return children[childKey];\r\n  }\r\n}\r\n\r\nexport default getChildNavigation;\r\n"]}